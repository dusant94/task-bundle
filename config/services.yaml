services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    #
    # INSTALLER
    #
    Dusant\TaskBundle\Tools\Installer:
        public: true
        arguments:
            # fetch the bundle via expression language
            $bundle: "@=service('kernel').getBundle('DusantTaskBundle')"

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Dusant\TaskBundle\Controller\:
        resource: '../src/Controller'
        public: true
        tags: ['controller.service_arguments']

# add more services, or override services that need manual wiring
#    Dusant\TaskBundle\ExampleClass:
#        arguments:
#            - "@service_id"
#            - "plain_value"
#            - "%parameter%"

    #
    # COMMANDS
    #

    # auto-register all commands as services
    Dusant\TaskBundle\Command\:
        resource: '../src/Command/*'
        tags: [ 'console.command' ]

    # ---------------------------------------------------------
    # SERVICES
    # ---------------------------------------------------------
    Dusant\TaskBundle\Service\ProductService:
        public: true